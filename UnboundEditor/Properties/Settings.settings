<?xml version='1.0' encoding='utf-8'?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)" GeneratedClassNamespace="UnboundEditor.Properties" GeneratedClassName="Settings">
  <Profiles />
  <Settings>
    <Setting Name="defaultCode" Type="System.String" Scope="Application">
      <Value Profile="(Default)">// Global Values
let windowHeight = 770;
let windowWidth = 1520;

// In-Game Values
let gravity = {0};
let friction = 0.7;

let platNum = {1};
let platforms = [];

// Game Assets
const platform1 = new Image();
platform1.src = 'platform1.png';

const platform2 = new Image();
platform2.src = 'platform2.png';

const platform3 = new Image();
platform3.src = 'platform3.png';

const char = new Image();
char.src = 'character.png';

const key = new Image();
key.src = 'key.png';

let animFrame = 0;
let gate = [];
for (let i = 0; i &lt; 8; i++) {{
  gate[i] = new Image();
  gate[i].src = "portal/" + i + ".png";
}}

// Initialization Code
window.onload = (event) =&gt; {{
    keyObject.yVelocity++;
    animatedObject();
}};

// Objects
let player = {{
    x: {3},
    y: {4},
    xVelocity: 0,
    yVelocity: 0,
    jump : true,
    height: {5},
    width: {6}
}};

let keyObject = {{
    x: {8},
    y: {9},
    xVelocity: 0,
    yVelocity: 0,
    picked: false,
    height: 86,
    width: 216
}};

let gateObject = {{
    x:  {10},
    y: {11},
    xVelocity: 0,
    yVelocity: 0,
    height: 100,
    width: 100
}}

let keys = {{
    right: false,
    left: false,
    up: false,
}};

// Creating the Global Canvas
function rendercanvas(){{
    ctx.fillStyle = "#F0F8FF";
    ctx.fillRect(0, 0, windowWidth, windowHeight);
    ctx.clearRect(0, 0, canvas.width, canvas.height);

}}

// Creating the Player
function renderplayer(){{
    ctx.fillStyle = "#3f4f59";
    ctx.fillRect((player.x)-player.width, (player.y)-player.height, player.width, player.height);
    ctx.drawImage(char, (player.x)-player.width, (player.y)-player.height, player.width, player.height);
}}

// Creating Objects
function renderObjects() {{
    {7}
}}

// Creating and Rendering the Platforms
function createplat(){{
    platforms.push(
        {{
        x: 0,
        y: 750,
        width: 1600,
        height: 200
        }}
    );
    
    {2}
}}

function renderplat(){{
    ctx.fillStyle = "#222831";
    for (let ei = 0; ei &lt; platNum; ei++) {{
        ctx.fillRect(platforms[ei].x, platforms[ei].y, platforms[ei].width-50,platforms[ei].height);
        if(platforms[ei].width == 200 &amp;&amp; platforms[ei].height == 50) {{
            ctx.drawImage(platform1, platforms[ei].x, platforms[ei].y, platforms[ei].width-50, platforms[ei].height);
        }}
        if(platforms[ei].width == 300 &amp;&amp; platforms[ei].height == 50) {{
            ctx.drawImage(platform2, platforms[ei].x, platforms[ei].y, platforms[ei].width-50, platforms[ei].height);
        }}
        if(platforms[ei].width == 100 &amp;&amp; platforms[ei].height == 20) {{
            ctx.drawImage(platform3, platforms[ei].x, platforms[ei].y, platforms[ei].width-50, platforms[ei].height);
        }}
    }}
}}

// Input Handlers
document.addEventListener("keydown", function(event) {{
    if (event.code === 'KeyW') {{
        if(player.jump == false) {{
            player.yVelocity = -10;
        }}
    }}
    if (event.code === 'KeyA') {{
        keys.left = true;
    }}
    if (event.code === 'KeyD') {{
        keys.right = true;
    }}
}});

document.addEventListener("keyup", function(event) {{
    if (event.code === 'KeyW') {{
        if(player.yVelocity &lt; -2) {{
            player.yVelocity = -3;
        }}
    }}
    if (event.code === 'KeyA') {{
        keys.left = false;
    }}
    if (event.code === 'KeyD') {{
        keys.right = false;
    }}
}});

function animationLoop() {{
    animFrame++;
    if(animFrame == 8){{
        animFrame = 0;
    }}
}}

// Game Loop
function loop() {{
    // Object Animation
    if(keyObject.y == {9}+10) {{
        keyObject.yVelocity = -0.5;
    }}
    if(keyObject.y == {9}-10) {{
        keyObject.yVelocity = 0.5;
    }}

    // Player Border Collision
    if(player.x &lt;= 50) {{
        player.x = 50;
    }}

    if(player.x &gt;= 1517) {{
        player.x = 1517;
    }}

    // Vertical Movement
    if(player.jump == false) {{
        player.xVelocity *= friction;
    }} 
    else {{
        player.yVelocity += gravity;
    }}
    player.jump = true;

    // Horizontal Movement
    if(keys.left) {{
        player.xVelocity = -5;
    }}
    if(keys.right) {{
        player.xVelocity = 5;
    }}
    
    // Updating the y and x coordinates of the player
    player.y += player.yVelocity;
    player.x += player.xVelocity;

    // Updating the y and x coordinates of the objects
    keyObject.y += keyObject.yVelocity;
    keyObject.x += keyObject.xVelocity;

    // Collision Detection
    let i = -1;

    for (let eh = 0; eh &lt; platNum; eh++) {{
        if(platforms[eh].x &lt; player.x &amp;&amp; player.x &lt; platforms[eh].x + platforms[eh].width &amp;&amp; platforms[eh].y &lt; player.y &amp;&amp; player.y &lt; platforms[eh].y + platforms[eh].height){{
            i = eh;
        }}   
    }}

    if (i &gt; -1){{
        player.jump = false;
        player.y = platforms[i].y;    
    }}

    // Object Pickup Detection
    if(keyObject.x &lt; player.x &amp;&amp; player.x &lt; keyObject.x + keyObject.height &amp;&amp; keyObject.y &lt; player.y &amp;&amp; player.y &lt; keyObject.y + keyObject.width){{
        keyObject.picked = true;
    }}

    // Level Switch
    if(gateObject.x &lt; player.x &amp;&amp; player.x &lt; gateObject.x + gateObject.height &amp;&amp; gateObject.y &lt; player.y &amp;&amp; player.y &lt; gateObject.y + gateObject.width &amp;&amp; keyObject.picked == true){{
        window.location.replace("credits.html");
    }}

    // Object Rendering
    rendercanvas();
    renderplayer();
    renderplat();
    renderObjects();
}}
canvas=document.getElementById("canvas");
ctx=canvas.getContext("2d");
ctx.canvas.height = windowHeight;
ctx.canvas.width = windowWidth;
createplat();

setInterval(loop,22);
setInterval(animationLoop,22);
</Value>
    </Setting>
  </Settings>
</SettingsFile>